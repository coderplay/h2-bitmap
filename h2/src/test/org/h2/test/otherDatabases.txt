MySQL
--------------------------------------------------------------------------------------------------------

ANSI mode can be set using SET GLOBAL sql_mode='ANSI'; 'TRADITIONAL' is default
SELECT @@global.sql_mode

Compare with NULL problem
drop table test;
create table test(id int);
insert into test values(1);
insert into test values(null);
-- 2 rows even in ANSI mode (correct is 1 row):
select * from test where id=id and 1=1;

MS SQL Server 2005
--------------------------------------------------------------------------------------------------------
Problems when trying to select large objects (even if ResultSet.getBinaryStream is used).
The workaround responseBuffering=adaptive doesn't always seem to work
(jdbc:sqlserver://localhost:4220;DatabaseName=test;responseBuffering=adaptive)

PostgreSQL
--------------------------------------------------------------------------------------------------------


Derby
--------------------------------------------------------------------------------------------------------
To call getFD().sync() (which results in the OS call fsync()),
set the system property derby.storage.fileSyncTransactionLog to true true.
See
http://db.apache.org/derby/javadoc/engine/org/apache/derby/iapi/reference/Property.html#FILESYNC_TRANSACTION_LOG

